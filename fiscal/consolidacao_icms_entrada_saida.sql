/*
Script: Consolidacao_ICMS_Entradas_Saidas.sql
===
Autor: Matheus de Paula
===
Descrição: Este script realiza a consolidação dos valores de ICMS de notas fiscais de entrada e 
saída, abrangendo diferentes modelos de documentos (NF, NFC-e, SAT), com regras 
parametrizadas conforme o SPED (EFD_GERARD100 e EFD_GERARD500).
===
Data: 2025-10-26
===
Compatibilidade: SQL Server
===
Observação: 
  > Script criado levando em consideração sistemas de criação personalizada de relatórios
  > Este script foi originalmente desenvolvido e testado em um sistema interno de criação de relatórios personalizados.
    Por esse motivo, utiliza o formato de "Identificador Delimitado" ([nome_coluna]) do SQL Server,
    permitindo melhor exibição e compatibilidade dos nomes de colunas na ferramenta utilizada.
*/

 SELECT TB.TIPO [TIPO] 
       ,TB.[COD.LOJA] [COD.LOJA]
       ,TB.[DT.PERÍODO] 
       ,TB.CFOP [CFOP]
       ,ISNULL(TB.[ALIQ. ICMS], 0) [ALIQ. ICMS]
       ,TB.CST [CST]
       ,CAST(ISNULL(SUM(TB.[VALOR SPED]), 0) AS NUMERIC(15, 2)) [VALOR SPED]
       ,ISNULL(SUM(TB.[BASE ICMS]), 0) [BASE ICMS]
       ,ISNULL(SUM(TB.[VALOR IMPOSTO]), 0) [VALOR IMPOSTO]
       ,SUM(TB.[ISENTOS/NÃO TRIB.]) [ISENTOS/NÃO TRIB.]
       ,SUM(TB.OUTROS) [OUTROS]
       ,TB.[TIPO DE APURAÇÃO? PDV/FATURADO/CONSOLIDADO (CONDIÇÃO: CONTÉM)]
FROM (
/* =================================
   BLOCO 1: SAÍDAS - NF, NFC-e, SAT
   =================================
*/

-- SUBBLOCO 1.1: SAÍDA NF
SELECT 'SAIDA NF' [TIPO] 
              ,NF.CODLOJA [COD.LOJA] 
              ,CAST(NF.DTEMISSAO AS DATE) [DT.PERÍODO] 
              ,ITM.CODNATOPER [CFOP] 
              ,ISNULL(ITM.ALIQ_ICMS, 0.00) [ALIQ. ICMS] 
              ,ITM.CODTRIB [CST] 
               /*
                   PARA QUE OS VALORES FIQUEM DE FORMA CORRETA, ATRIBUINDO VALORES DE DESPESA, SEGURO OU FRETE
                   UTILIZAMOS UMA SÉIRE DE PARAMETOS JUNTO COM A FUNÇÃO "CASE WHEN", PARA QUE, CASO O MESMO ESTEJA MARCADO
                   ATRIBUA OU NÃO OS VALORES
               */
              ,CASE WHEN PS.ADICIONAIS_EFD_ZERARVALORESNF = 1 AND ITM.CODNATOPER LIKE '5929%' THEN 0.00 ELSE CAST((SUM(ITM.VALOR_MERC - (ITM.VALOR_MERC * ISNULL(NF.DESCONTO, 0) / 100) + ISNULL(ITM.VALOR_IPI, 0) + ISNULL(ITM.VALOR_SUB, 0) + ISNULL(ITM.VALOR_ICMSFCPDEST, 0) + ISNULL(ITM.VFCP, 0) - ISNULL(ITM.VLDESCONTOCAPA, 0)) 
					      + CASE WHEN NF.DESTA_OUTRA='1' THEN SUM(ITM.VALOR_MERC)*((NF.OUTRAS_DESP / NF.TOTAL_MERC)) ELSE 0 END
					      + CASE WHEN NF.DESTA_ACES='1' THEN SUM(ITM.VALOR_MERC)*((NF.DESPESA_ACESS / NF.TOTAL_MERC)) ELSE 0 END 
					      + CASE WHEN NF.DESTA_FRETE='1' THEN SUM(ITM.VALOR_MERC)*((NF.FRETE / NF.TOTAL_MERC)) ELSE 0 END 
					      + CASE WHEN NF.DESTA_SEGURO='1' THEN SUM(ITM.VALOR_MERC)*((NF.SEGURO / NF.TOTAL_MERC)) ELSE 0 END) AS NUMERIC (15, 2)) END [VALOR SPED] 
              ,ISNULL(CAST(SUM(CASE WHEN ISNULL(NF.REFCUPOMFISCAL, 0) = 0 THEN ITM.BASE_ICMS ELSE 0 END) AS NUMERIC (15, 2)), 0.00) [BASE ICMS] 
              ,ISNULL(CAST(SUM(CASE WHEN ISNULL(NF.REFCUPOMFISCAL, 0) = 0 THEN ITM.VALOR_ICMS ELSE 0 END) AS NUMERIC (15, 2)), 0.00) [VALOR IMPOSTO] 
              ,CAST(SUM(ISNULL(ITM.ISENTOS, 0.00)) AS NUMERIC (15, 2)) [ISENTOS/NÃO TRIB.] 
              ,CASE WHEN PS.ADICIONAIS_EFD_ZERARVALORESNF = 1 AND ITM.CODNATOPER LIKE '5929%' THEN 0.00 ELSE CASE WHEN SUM(ITM.VALOR_MERC - (ITM.VALOR_MERC * ISNULL(NF.DESCONTO, 0) / 100) - ISNULL(ITM.VALOR_DESC, 0) + ISNULL(ITM.VALOR_IPI, 0) + ISNULL(ITM.VALOR_SUB, 0) + ISNULL(ITM.VALOR_ICMSFCPDEST, 0) + ISNULL(ITM.VFCP, 0) - ISNULL(ITM.ISENTOS, 0) - ISNULL(ITM.BASE_ICMS, 0)) > 0 
					      THEN CAST(SUM(ITM.VALOR_MERC - (ITM.VALOR_MERC * ISNULL(NF.DESCONTO, 0) / 100) - ISNULL(ITM.VALOR_DESC, 0) + ISNULL(ITM.VALOR_IPI, 0) + ISNULL(ITM.VALOR_SUB, 0) + ISNULL(ITM.VALOR_ICMSFCPDEST, 0) + ISNULL(ITM.VFCP, 0) - ISNULL(ITM.ISENTOS, 0) - ISNULL(ITM.BASE_ICMS, 0)) AS NUMERIC (15, 2))	
					     ELSE 0 END END [OUTROS] 
               -- COLUNA CRIADA PARA UTLIZAR COMO FILTAGEM AO PUBLICAR NO SISTEMA INTERNAMENTE
              ,'FATURADO CONSOLIDADO' [TIPO DE APURAÇÃO? PDV/FATURADO/CONSOLIDADO (CONDIÇÃO: CONTÉM)]
FROM ITENS_NF_SAIDA ITM
INNER JOIN CAPA_NF_SAIDA ON NF.CODNF = ITM.CODNF
INNER JOIN CFOP NTO ON ITM.CODNATOPER = NTO.CODNATOPER
LEFT JOIN PARAMETROS_GERADOR_SPED PS ON NF.CODLOJA = PS.CODLOJA
-- LIMITE DE DADOS DE 8 MESES - LIMITADO PARA NÃO EFETUAR FILTAGEM SUPERIOR A ESSE LIMITE QUANDO PUBLICADA
WHERE DATEADD(MONTH, -8, GETDATE()) <= NF.DTEMISSAO
	AND NF.STATUS='E'
	AND NF.TIPO_NF='S'
GROUP BY ITM.CODNATOPER,NF.TOTAL_MERC,NF.DESTA_ACES,NF.DESTA_FRETE,NF.DESTA_OUTRA,NF.DESTA_SEGURO,NTO.LANCAMENTOS,NF.DESPESA_ACESS,NF.FRETE,NF.OUTRAS_DESP,
  NF.SEGURO,ITM.CODTRIB,ITM.CODTRIB,ITM.ALIQ_ICMS,CAST(NF.DTEMISSAO AS DATE),NF.CODLOJA, PS.ADICIONAIS_EFD_ZERARVALORESNF

UNION ALL
/*
   SUBBLOCO 1.2: SAÍDA NFC-e - COM A COLUNA "TIPO" FILTA QUAL MODELO DESEJA VISUALIZAR
*/
SELECT 'SAIDA NFCE' [TIPO]
              ,CX.CODLOJA [COD.LOJA]
              ,CAST(CX.DATA AS DATE) [DT.PERÍODO]
               /*
                 COMANDO "SUBSTING" USADO PARA PEGAR A PRIMEIRA LETRA DE CADA LINHA PARA DEFINIR O VALOR DA COLUNA CFOP .
                 CASO SEJA DIFERENTE DO RESULTADO ESPERADO, ELE FAZ UMA NOVA CONSULTA DE PARAMETRO (T.ICMS), JUNTO COM CASE
                 PARA DEFINIR QUAL A CFOP A SER DEFINIDA E APRESENTA Á PARIR DAS COLUNAS PASSADAS (PPDV.NFCE_CFOPTRIB OU PPDV.NFCE_CFOPST)
               */
              ,CASE WHEN SUBSTRING(CX.CODALIQ,1,1) = 'I' THEN '5102' ELSE CASE WHEN ISNULL(TR.ICMS, 0) = 1 THEN PPDV.NFCE_CFOPTRIB ELSE PPDV.NFCE_CFOPST END END [CFOP]
              ,ISNULL(CX.ALIQICMS, 0.00) [ALIQ. ICMS]
              ,CX.CODTRIB [CST]
              ,ISNULL(CAST(SUM((TOTLIQUIDO)-ISNULL(DESCONTOCUPOM, 0)+ISNULL(ACRESCIMOCUPOM, 0)+ISNULL(CX.VALOR_FRETE, 0)) AS NUMERIC (15, 2)), 0.00) [VALOR SPED]
              ,CASE WHEN SUBSTRING(CX.CODALIQ, 1, 1) = 'T' 
					      THEN ISNULL(CAST(SUM((((TOTLIQUIDO)-ISNULL(DESCONTOCUPOM, 0)+ISNULL(ACRESCIMOCUPOM, 0)) - (((TOTLIQUIDO)-ISNULL(DESCONTOCUPOM, 0)+ISNULL(ACRESCIMOCUPOM, 0)) * ISNULL(CX.PER_REDUC, 0) /100))) AS NUMERIC (15, 2)), 0.00) 
					     ELSE 0.00 END [BASE ICMS]
              ,CASE WHEN SUBSTRING(CX.CODALIQ, 1, 1) = 'T' 
					      THEN ISNULL(CAST(SUM((((TOTLIQUIDO)-ISNULL(DESCONTOCUPOM, 0)+ISNULL(ACRESCIMOCUPOM, 0)) - (((TOTLIQUIDO)-ISNULL(DESCONTOCUPOM, 0)+ISNULL(ACRESCIMOCUPOM, 0)) * ISNULL(CX.PER_REDUC, 0) /100))*CX.ALIQICMS / 100) AS NUMERIC (15, 2)), 0.00) 
					     ELSE 0.00 END [VALOR IMPOSTO]
              ,CASE WHEN SUBSTRING(CX.CODALIQ, 1, 1) = 'I' 
					      THEN ISNULL(CAST(SUM((TOTLIQUIDO)-ISNULL(DESCONTOCUPOM, 0)+ISNULL(ACRESCIMOCUPOM, 0)) AS NUMERIC (15, 2)), 0.00) 
					     ELSE 0.00 END [ISENTOS/NÃO TRIB.]
              ,CASE WHEN (SUBSTRING(CX.CODALIQ, 1, 1) = 'F' OR SUBSTRING(CX.CODALIQ, 1, 1)='N') 
					      THEN ISNULL(CAST(SUM((TOTLIQUIDO)-ISNULL(DESCONTOCUPOM, 0)+ISNULL(ACRESCIMOCUPOM, 0)) AS NUMERIC (15, 2)), 0.00) 
					     ELSE 0.00 END [OUTROS]
              ,'PDV CONSOLIDADO' [TIPO DE APURAÇÃO? PDV/FATURADO/CONSOLIDADO (CONDIÇÃO: CONTÉM)]
FROM ITENS_CUPOM CX
/*
   UTILIZANDO DIVERSAS CHAVES DE JUNÇÃO Á PARTIR DO INDEX CRIADO PARA OTIMIZAÇÂO 
   E GANHO DE PERFORMANCE, COMO TAMBÈM, MANTER A INTEGRIDADE DAS INFORMAÇÕES
*/
INNER JOIN CAPA_CUPOM_NFCE PNFCE ON PNFCE.DATA = CX.DATA
	AND PNFCE.CODLOJA = CX.CODLOJA
	AND PNFCE.CODCAIXA = CX.CODCAIXA
	AND PNFCE.NUMNFCE = CX.COO
LEFT JOIN PARAMETRO_PONTO_DE_VENDA PPDV ON PPDV.CODLOJA = CX.CODLOJA
LEFT JOIN TRIBUTACAO_ALIQUOTAS TR ON TR.CODTRIB = CX.CODTRIB
WHERE DATEADD(MONTH, -8, GETDATE()) <= CX.DATA
	AND CX.CANCELADO = 0
	AND CX.QTDCUPOM > 0
GROUP BY CX.CODTRIB,CX.ALIQICMS,TR.ICMS,PPDV.NFCE_CFOPTRIB,PPDV.NFCE_CFOPST,CAST(CX.DATA AS DATE),CX.CODLOJA,CX.CODALIQ

UNION ALL
-- SUBBLOCO 1.3: SAÍDA SAT
SELECT 'SAIDA SAT' [TIPO]
              ,CX.CODLOJA [COD.LOJA]
              ,CAST(CX.DATA AS DATE) [DT.PERÍODO]
              ,CASE WHEN SUBSTRING(CX.CODALIQ,1,1) = 'I' THEN '5102' ELSE CASE WHEN ISNULL(TR.ICMS, 0) = 1 THEN PPDV.NFCE_CFOPTRIB ELSE PPDV.NFCE_CFOPST END END [CFOP]
              ,ISNULL(CX.ALIQICMS, 0.00) [ALIQ. ICMS]
              ,CX.CODTRIB [CST]
              ,ISNULL(CAST(SUM((TOTLIQUIDO)-ISNULL(DESCONTOCUPOM, 0)+ISNULL(ACRESCIMOCUPOM, 0)+ISNULL(CX.VALOR_FRETE, 0)) AS NUMERIC (15, 2)), 0.00) [VALOR SPED]
              ,CASE WHEN SUBSTRING(CX.CODALIQ, 1, 1) = 'T' 
					      THEN ISNULL(CAST(SUM((((TOTLIQUIDO)-ISNULL(DESCONTOCUPOM, 0)+ISNULL(ACRESCIMOCUPOM, 0)) - (((TOTLIQUIDO)-ISNULL(DESCONTOCUPOM, 0)+ISNULL(ACRESCIMOCUPOM, 0)) * ISNULL(CX.PER_REDUC, 0) /100))) AS NUMERIC (15, 2)), 0.00) 
					     ELSE 0.00 END [BASE ICMS]
              ,CASE WHEN SUBSTRING(CX.CODALIQ, 1, 1) = 'T' 
					      THEN ISNULL(CAST(SUM((((TOTLIQUIDO)-ISNULL(DESCONTOCUPOM, 0)+ISNULL(ACRESCIMOCUPOM, 0)) - (((TOTLIQUIDO)-ISNULL(DESCONTOCUPOM, 0)+ISNULL(ACRESCIMOCUPOM, 0)) * ISNULL(CX.PER_REDUC, 0) /100))*CX.ALIQICMS / 100) AS NUMERIC (15, 2)), 0.00) 
					     ELSE 0.00 END [VALOR IMPOSTO]
              ,CASE WHEN SUBSTRING(CX.CODALIQ, 1, 1) = 'I' 
					      THEN ISNULL(CAST(SUM((TOTLIQUIDO)-ISNULL(DESCONTOCUPOM, 0)+ISNULL(ACRESCIMOCUPOM, 0)) AS NUMERIC (15, 2)), 0.00) 
					     ELSE 0.00 END [ISENTOS/NÃO TRIB.]
              ,CASE WHEN (SUBSTRING(CX.CODALIQ, 1, 1) = 'F' OR SUBSTRING(CX.CODALIQ, 1, 1)='N') 
					      THEN ISNULL(CAST(SUM((TOTLIQUIDO)-ISNULL(DESCONTOCUPOM, 0)+ISNULL(ACRESCIMOCUPOM, 0)) AS NUMERIC (15, 2)), 0.00) 
					     ELSE 0.00 END [OUTROS]
              ,'PDV CONSOLIDADO' [TIPO DE APURAÇÃO? PDV/FATURADO/CONSOLIDADO (CONDIÇÃO: CONTÉM)]
FROM ITENS_CUPOM CX
INNER JOIN CAPA_CUPOM_SAT PSAT ON PSAT.DATA = CX.DATA
	AND PSAT.CODLOJA = CX.CODLOJA
	AND PSAT.CODCAIXA = CX.CODCAIXA
	AND PSAT.NUMCUPOMSAT = CX.COO
LEFT JOIN PARAMETRO_PONTO_DE_VENDA PPDV ON PPDV.CODLOJA = CX.CODLOJA
LEFT JOIN TRIBUTACAO_ALIQUOTAS TR ON TR.CODTRIB = CX.CODTRIB
WHERE DATEADD(MONTH, -8, GETDATE()) <= CX.DATA
	AND CX.CANCELADO = 0
	AND CX.QTDCUPOM > 0
GROUP BY CX.CODTRIB,CX.ALIQICMS,TR.ICMS,PPDV.NFCE_CFOPTRIB,PPDV.NFCE_CFOPST,CAST(CX.DATA AS DATE),CX.CODLOJA,CX.CODALIQ

 ) AS TB 
 GROUP BY TB.TIPO, TB.[COD.LOJA], TB.[DT.PERÍODO], TB.CFOP, TB.[ALIQ. ICMS], TB.CST, TB.[TIPO DE APURAÇÃO? PDV/FATURADO/CONSOLIDADO (CONDIÇÃO: CONTÉM)]

 UNION ALL

 SELECT TB.TIPO [TIPO] 
       ,TB.[COD.LOJA] [COD.LOJA]
       ,TB.[DT.PERÍODO]
       ,TB.CFOP [CFOP]
       ,ISNULL(TB.[ALIQ. ICMS], 0) [ALIQ. ICMS]
       ,TB.CST [CST]
       ,CAST(ISNULL(SUM(TB.[VALOR SPED]), 0) AS NUMERIC(15, 2)) [VALOR SPED]
       ,ISNULL(SUM(TB.[BASE ICMS]), 0) [BASE ICMS]
       ,ISNULL(SUM(TB.[VALOR IMPOSTO]), 0) [VALOR IMPOSTO]
       ,SUM(TB.[ISENTOS/NÃO TRIB.]) [ISENTOS/NÃO TRIB.]
       ,CAST(SUM(TB.OUTROS) AS NUMERIC (15,2)) [OUTROS]
       ,TB.[TIPO DE APURAÇÃO? PDV/FATURADO/CONSOLIDADO (CONDIÇÃO: CONTÉM)]
FROM (
 /* =================================
   BLOCO 2: ENTADA - NF
   =================================
*/
  SELECT 'ENTRADA' [TIPO] 
             ,NF.CODLOJA [COD.LOJA] 
             ,CAST(NF.DTENTRADA AS DATE) [DT.PERÍODO]
             ,SUBSTRING(ITMNF.CODNATOPER,1,4) [CFOP]
             ,CASE WHEN PS.EFD_ZERARSTENTRADA = 1 AND T.SUBTRIB = 1 THEN 0.00 
		            WHEN PS.EFD_MANTERCSTST = 0 AND ITMNF.CODTRIB IN ('010','070') THEN 0.00
              ELSE ISNULL(ITMNF.ICMS_CRED,0) END [ALIQ. ICMS]
             ,CASE WHEN PS.EFD_ZERARSTENTRADA = 1 AND T.SUBTRIB = 1 THEN '060' 
	              WHEN PS.EFD_MANTERCSTST = 0 AND ITMNF.CODTRIB IN ('010','070') THEN '060'
              ELSE ITMNF.CODTRIB END [CST]
   /*
     EXITEM # TIPOS DE GERAÇÃO DE VALOR DE ENTRADA - "LÍQUIDO","BRUTO","BRUTO+DESPESA+ST"
     Á PARTIR DOS PARAMETOS E USANDO CASE, O VALOR É CÁLCULADO DE FORMA DIFERENTE DEPENDENDO DAS
     MARCAÇÕES DE GERAÇÃO DO CLIENTE
   */
             -- VALOR LÍQUIDO
             ,CASE WHEN PS.TIPO_VLITEM = 1 THEN CAST(SUM(ROUND((ITMNF.TOT_LIQ
                                    + ISNULL(ITMNF.VALORCOMBATEPROBEZAST, 0)
                                    + ISNULL(ITMNF.VALORIPI, 0)
                                    + CASE WHEN NF.FRETEDESTAC = 1 THEN(ISNULL(ITMNF.VALORFRETE, 0) * (ITMNF.QTDNOTA * ITMNF.QTDEMBAL)) ELSE 0 END
                                    + CASE WHEN NF.SEGURODESTAC = 1 THEN(ISNULL(ITMNF.VALORSEGURO, 0) * (ITMNF.QTDNOTA * ITMNF.QTDEMBAL)) ELSE 0 END
                                    + CASE WHEN NF.ACESSDESTAC = 1 THEN(ISNULL(ITMNF.DESPACESS, 0) * (ITMNF.QTDNOTA * ITMNF.QTDEMBAL)) ELSE 0 END
                                    + CASE WHEN NF.FINANDESTAC = 1 THEN(ISNULL(ITMNF.DESPFINAN, 0) * (ITMNF.QTDNOTA * ITMNF.QTDEMBAL)) ELSE 0 END
                                    + CASE WHEN NF.ICMSSUBSTDESTAC = 1 THEN CASE WHEN ISNULL(ITMNF.VALORSTMVA,0) <> 0 THEN ISNULL(ITMNF.VALORSTMVA,0) ELSE ISNULL(ITMNF.SUBST_TRIB,0) * (ISNULL(ITMNF.QTDNOTA,0) * ISNULL(ITMNF.QTDEMBAL,1)) END ELSE 0 END
                                    - CASE WHEN NF.ICMSDESONERADODESTAC = '1' THEN ISNULL(ITMNF.VALORICMSDESON, 0) ELSE 0 END), 2)) AS NUMERIC(15,2))
             -- VALOR BRUTO
	            WHEN PS.TIPO_VLITEM = 2 THEN CAST(SUM(ROUND((ITMNF.TOTAL
                                    + ISNULL(ITMNF.VALORIPI, 0)
                                    + CASE WHEN NF.ICMSSUBSTDESTAC = 1 THEN CASE WHEN ISNULL(ITMNF.VALORSTMVA,0) <> 0 THEN ISNULL(ITMNF.VALORSTMVA,0) ELSE ISNULL(ITMNF.SUBST_TRIB,0) * (ISNULL(ITMNF.QTDNOTA,0) * ISNULL(ITMNF.QTDEMBAL,1)) END ELSE 0 END), 2)) AS NUMERIC(15,2))
	          -- VALOR BRUTO+DESPESA+ST
              WHEN PS.TIPO_VLITEM = 3 THEN CAST(SUM(ROUND(ITMNF.TOTAL
                                    + CASE WHEN NF.FRETEDESTAC = 1 THEN ISNULL(ITMNF.VALORFRETE, 0.00) ELSE 0 END
                                    + CASE WHEN NF.SEGURODESTAC = 1 THEN ISNULL(ITMNF.VALORSEGURO, 0.00) ELSE 0 END
                                    + CASE WHEN NF.ACESSDESTAC = 1 THEN ISNULL(ITMNF.DESPACESS, 0.00) ELSE 0 END
                                    + CASE WHEN NF.FINANDESTAC = 1 THEN ISNULL(ITMNF.DESPFINAN, 0.00) ELSE 0 END
                                    + ISNULL(ITMNF.VALORCOMBATEPROBEZAST, 0)
                                    - CASE WHEN NF.ICMSDESONERADODESTAC = 1 THEN ISNULL(ITMNF.VALORICMSDESON, 0) ELSE 0 END, 2)
                                    + ISNULL(ITMNF.VALORIPI, 0)
                                    + CASE WHEN NF.ICMSSUBSTDESTAC = 1 THEN CASE WHEN ISNULL(ITMNF.VALORSTMVA,0) <> 0 THEN ISNULL(ITMNF.VALORSTMVA,0) ELSE ISNULL(ITMNF.SUBST_TRIB,0) * (ISNULL(ITMNF.QTDNOTA,0) * ISNULL(ITMNF.QTDEMBAL,1)) END ELSE 0 END) AS NUMERIC(15,2)) END [VALOR SPED] 
           ,CASE WHEN PS.EFD_ZERARSTENTRADA = 1 AND T.SUBTRIB = 1 THEN 0.00 
             -- USADO O "LIKE" E O "OR" PARA QUE CASO ALGUM DESSES RESULTADOS FOR VERDADEIRO, O VALOR 0.00 SEJA DEFINIDO
	           WHEN ITMNF.CODTRIB LIKE '%90' OR ISNULL(NTO.REFUSOCONSUMO, 0) = 1 THEN 0.00 
	           WHEN PS.EFD_MANTERCSTST = 0 AND ITMNF.CODTRIB IN ('010','070') THEN 0.00
            ELSE SUM(ISNULL(ITMNF.BASEICMS, 0.00)) END [BASE ICMS]
           ,CASE WHEN PS.EFD_ZERARSTENTRADA = 1 AND T.SUBTRIB = 1 THEN 0.00 
	           WHEN ITMNF.CODTRIB LIKE '%90' OR ISNULL(NTO.REFUSOCONSUMO, 0) = 1 THEN 0.00 
	           WHEN PS.EFD_MANTERCSTST = 0 AND ITMNF.CODTRIB IN ('010','070') THEN 0.0
            ELSE SUM(ISNULL(ITMNF.VALORICMS, 0.00)) END [VALOR IMPOSTO]
           ,CASE WHEN NTO.BONIFIC=1 THEN SUM((ISNULL(ITMNF.TOT_LIQ, 0)
                                    + CASE WHEN NF.FRETEDESTAC = 1 THEN(ISNULL(ITMNF.VALORFRETE, 0) * (ITMNF.QTDNOTA * ITMNF.QTDEMBAL)) ELSE 0 END
                                    + CASE WHEN NF.SEGURODESTAC = 1 THEN(ISNULL(ITMNF.VALORSEGURO, 0) * (ITMNF.QTDNOTA * ITMNF.QTDEMBAL)) ELSE 0 END
                                    + CASE WHEN NF.ACESSDESTAC = 1 THEN(ISNULL(ITMNF.DESPACESS, 0) * (ITMNF.QTDNOTA * ITMNF.QTDEMBAL)) ELSE 0 END
                                    + CASE WHEN NF.FINANDESTAC = 1 THEN(ISNULL(ITMNF.DESPFINAN, 0) * (ITMNF.QTDNOTA * ITMNF.QTDEMBAL)) ELSE 0 END
                                    + CASE WHEN NF.ICMSSUBSTDESTAC = 1 THEN CASE WHEN ISNULL(ITMNF.VALORSTMVA, 0) <> 0 THEN ISNULL(ITMNF.VALORSTMVA, 0) ELSE ISNULL(ITMNF.SUBST_TRIB, 0) END ELSE 0 END
                                    - CASE WHEN NF.ICMSDESONERADODESTAC = '1' THEN ISNULL(ITMNF.VALORICMSDESON, 0) ELSE 0 END
                                    + ISNULL(ITMNF.VALORCOMBATEPROBEZAST, 0)
                                    + ISNULL(ITMNF.VALORIPI, 0.00)) - ISNULL(ITMNF.BASEICMS, 0)
          )  ELSE SUM(ISNULL(ITMNF.ISENTOS,0.00)) END [ISENTOS/NÃO TRIB.]
          ,CASE WHEN ISNULL(NTO.BONIFIC,0) = 0 THEN CASE WHEN SUM((ITMNF.TOT_LIQ+ISNULL(ITMNF.VALORIPI, 0))-ISNULL(ITMNF.ISENTOS, 0)-ITMNF.BASEICMS) > 0 
            THEN SUM((ITMNF.TOT_LIQ+ISNULL(ITMNF.VALORIPI, 0))-ISNULL(ITMNF.ISENTOS, 0)-ITMNF.BASEICMS)
           ELSE 0 END ELSE 0.00 END [OUTROS]
          ,'PDV FATURADO CONSOLIDADO' [TIPO DE APURAÇÃO? PDV/FATURADO/CONSOLIDADO (CONDIÇÃO: CONTÉM)]

 FROM ITENS_NF_ENTADA ITMNF 
 INNER JOIN CAPA_NF_ENTADA NF ON NF.CODENTRADANF=ITMNF.CODENTRADANF 
 INNER JOIN TRIBUTACAO_ALIQUOTAS T ON T.CODTRIB=ITMNF.CODTRIB 
 INNER JOIN CFOP NTO ON NTO.CODNATOPER=ITMNF.CODNATOPER 
 LEFT JOIN PARAMETROS_GERADOR_SPED PS ON PS.CODLOJA = NF.CODLOJA
 WHERE DATEADD(MONTH, -8, GETDATE()) <= NF.DTENTRADA
  /*
    POR MAIS QUE NÃO SEJA RECOMENDADO, USAMOS O "OR" DE FORMA A RESPEITAR OS PARAMETOS DE
    GERAÇÃO MARCADOS E FAZER OS CÁLCULOS COM OS MODELOS COERENTES A MARCAÇÃO
  */
 AND (((PS.EFD_GERARD100 = 1 AND PS.EFD_GERARD500 = 1) AND NF.MODELO IN ('01','04','06','55','1B','29','57','22')) 
 OR (PS.EFD_GERARD500 = 1 AND NF.MODELO IN ('01','04','06','55','1B','29','22'))
 OR ((PS.EFD_GERARD100 = 1 AND NF.MODELO IN ('01','04','06','55','1B','29','57'))
 OR ((PS.EFD_GERARD100 <> 1 OR PS.EFD_GERARD500 <> 1) AND NF.MODELO IN ('01','04','06','55','1B','29')))) 
 GROUP BY SUBSTRING(ITMNF.CODNATOPER,1,4) ,NTO.DESCRICAO
,ITMNF.CODTRIB,ITMNF.ICMS_CRED
, T.SUBTRIB, NF.CODLOJA, CAST(NF.DTENTRADA AS DATE), PS.EFD_ZERARSTENTRADA, PS.TIPO_VLITEM, NTO.BONIFIC, NTO.REFUSOCONSUMO, PS.EFD_MANTERCSTST

) TB

GROUP BY TB.TIPO, TB.[COD.LOJA], TB.[DT.PERÍODO], TB.CFOP, TB.[ALIQ. ICMS], TB.CST, TB.[TIPO DE APURAÇÃO? PDV/FATURADO/CONSOLIDADO (CONDIÇÃO: CONTÉM)]
