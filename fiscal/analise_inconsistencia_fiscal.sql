/*
Script: Analise_Inconsistencia_Fiscal.sql
===
Autor: Matheus de Paula
===
Descrição: A principal funcionalidade desse script, é apresentar ao analista as divergências dos valores saídas
de um arquivo fiscal, auxiliando na identificação de divergências. A mesma apreseta resultados como Cancelamentos
Incorretos, Duplicidades, Divergências de Valores e informações Faltantes
===
Data: 2025-10-26
===
Compatibilidade: SQL Server
*/
/*
=============================
 BLOCO 1: Parâmetros de entrada
=============================
*/
DECLARE
		@DATAINI DATE,
		@DATAEND DATE,
		@CODLOJA INT,
		@GERAREL CHAR(1),
		@GERAQUEBRASEQ CHAR(1)

SET @DATAINI = '2025-06-01'
SET @DATAEND = '2025-06-30'
SET @CODLOJA = 1
/*
  Flags para gerar relatório de diferenças (@GERAREL) e identificar quebras de sequência (@GERAQUEBRASEQ)
  Devido a grande quantidade de informações, pode ser marcado para apresentar as diferenças de valor ou de
  quebra de sequência se desejar ou não
*/
SET @GERAREL = 0           
SET @GERAQUEBRASEQ = 1   
/* --- Fim do bloco anterior --- */
  
/*
=============================
 BLOCO 2: Limpeza de tabelas temporárias
=============================
*/
 DROP TABLE IF EXISTS ##MINMAXCUPOM
 DROP TABLE IF EXISTS ##QUEBRANFCE
 DROP TABLE IF EXISTS ##QUEBRASAT
 DROP TABLE IF EXISTS ##SATNFCE
/* --- Fim do bloco anterior --- */
  
/*  
=============================
 BLOCO 3: Consolidação de cupons NFCE e SAT em tabela temporária
=============================
*/
-- Coleta todos os cupons (NFCE ou SAT) e coloca em uma temporária para análise
 SELECT CODLOJA, NUMNFCE CUPOM, CODCAIXA, DATA INTO ##SATNFCE FROM INFO_CUPOM_NFCE
 WHERE DATA BETWEEN @DATAINI AND @DATAEND
  AND CODLOJA = @CODLOJA
  UNION ALL
  SELECT CODLOJA, NUMCUPOMSAT CUPOM, CODCAIXA, DATA FROM INFO_CUPOM_SAT
 WHERE DATA BETWEEN @DATAINI AND @DATAEND
  AND CODLOJA = @CODLOJA
/* --- Fim do bloco anterior --- */
  
/*  
=============================
 BLOCO 4: Identificação de min/max de cupons por caixa
=============================
*/
 -- COLETA SEQUENCIA DE CUPONS
 SELECT * INTO ##MINMAXCUPOM FROM(
 SELECT CODLOJA, MIN(NUMNFCE)NUMMIN, MAX(NUMNFCE)NUMMAX, CODCAIXA, 'NFCE' TIPO 
  FROM INFO_CUPOM_NFCE 
 WHERE DATA BETWEEN @DATAINI AND @DATAEND 
       AND CODLOJA = @CODLOJA

 GROUP BY CODLOJA, CODCAIXA
 UNION ALL 
 SELECT CODLOJA, MIN(NUMCUPOMSAT)NUMMIN, MAX(NUMCUPOMSAT)NUMMAX, CODCAIXA, 'SAT' TIPO 
  FROM INFO_CUPOM_SAT 
 WHERE DATA BETWEEN @DATAINI AND @DATAEND 
       AND CODLOJA = @CODLOJA

 GROUP BY CODLOJA, CODCAIXA
 ) AS TB
/* --- Fim do bloco anterior --- */
  
/*
=============================
 BLOCO 5: Identificação de quebras de sequência (NFCE e SAT) 
=============================
*/
-- Quebra de Sequencia NFCE
WITH INTNFCE (CODLOJA, NUNMIN, NUMMAX, CODCAIXA, TIPO) AS (
 SELECT ##MINMAXCUPOM.CODLOJA, CAST(##MINMAXCUPOM.NUMMIN AS INT) NUNMIN, CAST(##MINMAXCUPOM.NUMMAX AS INT) NUMMAX, ##MINMAXCUPOM.CODCAIXA, ##MINMAXCUPOM.TIPO FROM ##MINMAXCUPOM
 UNION ALL 
 SELECT CODLOJA, NUNMIN + 1, NUMMAX, CODCAIXA, TIPO FROM INTNFCE WHERE NUNMIN < NUMMAX)
 SELECT INTNFCE.CODCAIXA,
        INTNFCE.NUNMIN AS COO
INTO ##QUEBRANFCE
 FROM INTNFCE 
 LEFT JOIN INFO_CUPOM_NFCE ON INFO_CUPOM_NFCE.NUMNFCE = INTNFCE.NUNMIN 
            AND INFO_CUPOM_NFCE.CODCAIXA = INTNFCE.CODCAIXA
					  AND INFO_CUPOM_NFCE.CODLOJA = INTNFCE.CODLOJA		  
					  
 WHERE INFO_CUPOM_NFCE.NUMNFCE IS NULL 
   AND INTNFCE.TIPO = 'NFCE'
   and @GERAQUEBRASEQ = 1
 ORDER BY INTNFCE.NUNMIN 
 OPTION ( MAXRECURSION 0);

-- Quebra de Sequencia SAT
  WITH INTNFCE (CODLOJA, NUNMIN, NUMMAX, CODCAIXA, TIPO) AS (
 SELECT ##MINMAXCUPOM.CODLOJA, CAST(##MINMAXCUPOM.NUMMIN AS INT), CAST(##MINMAXCUPOM.NUMMAX AS INT), ##MINMAXCUPOM.CODCAIXA, ##MINMAXCUPOM.TIPO FROM ##MINMAXCUPOM
 UNION ALL 
 SELECT CODLOJA, NUNMIN + 1, NUMMAX, CODCAIXA, TIPO FROM INTNFCE WHERE NUNMIN < NUMMAX)
 SELECT INTNFCE.CODCAIXA,
        INTNFCE.NUNMIN AS COO
 INTO ##QUEBRASAT
 FROM INTNFCE 
 LEFT JOIN INFO_CUPOM_SAT ON INFO_CUPOM_SAT.NUMCUPOMSAT = INTNFCE.NUNMIN 
            AND INFO_CUPOM_SAT.CODCAIXA = INTNFCE.CODCAIXA
					  AND INFO_CUPOM_SAT.CODLOJA = INTNFCE.CODLOJA
					  
					  
 WHERE INFO_CUPOM_SAT.NUMCUPOMSAT IS NULL 
   AND INTNFCE.TIPO = 'SAT'
   and @GERAQUEBRASEQ = 1
 ORDER BY INTNFCE.NUNMIN 
 OPTION (MAXRECURSION 0)
/* --- Fim do bloco anterior --- */
    
/*
=============================
 BLOCO 6: Construção do relatório final
=============================
*/
SELECT TB.TIPO,
        CAST(TB.DATA AS DATE) DATA,
        TB.CODCAIXA,
		    TB.COO,
		    TB.TABELA,
		    TB.CAN_CAPA,
		    TB.CAN_NFCE_SAT,
		    REPLACE(TB.PDV, '.', ',') PDV,
		    REPLACE(TB.CFE, '.', ',') CFE,
		    REPLACE(TB.DIFERENCA, '.', ',') DIFERENCA,
		    TB.ORIENTACAO FROM (
    
--QUEBRA DE SEQUENCIA DE CUPONS
SELECT 'QUEBRA DE SEQUENCIA' TIPO,
        '' DATA,
        TB.CODCAIXA,
        TB.COO,
		    '-' TABELA,
		    '-' CAN_CAPA,
		    '-' CAN_NFCE_SAT,
		    0.00 PDV,
		    0.00 CFE,
		    0.00 DIFERENCA,
		    'VERIFICAR XML NOS CAIXAS, CASO NÃO EXISTAM SOLICITAR CONTABILIDADE' ORIENTACAO FROM (

SELECT  ##QUEBRANFCE.CODCAIXA,
        ##QUEBRANFCE.COO FROM ##QUEBRANFCE
WHERE @GERAQUEBRASEQ = 1
    
UNION ALL
    
SELECT  ##QUEBRASAT.CODCAIXA,
        ##QUEBRASAT.COO FROM ##QUEBRASAT
WHERE @GERAQUEBRASEQ = 1

) AS TB
UNION ALL

--COMPARATIVO ENTRE FATURAMENTO CFE E RESUMO DE VENDAS PDV
SELECT 'FAT.CFE x RESUMO PDV' TIPO,
        TB.DATA,
        TB.CODCAIXA,
		    TB.COO,
		    '-' TABELA,
		    '-' CAN_CAPA,
		    '-' CAN_NFCE_SAT,
		    SUM(TB.PDV) PDV,
		    SUM(TB.CFE) CFE,
		    SUM(TB.PDV) - SUM(TB.CFE) DIFERENCA,
		    'VERIFICAR AS DEMAIS INCONSISTÊNCIAS DESTE RELTÓRIO ALÉM DE CODALIQ=0 E ITENS DUPLICADOS' ORIENTACAO 
FROM(
    
/*
    Para analisar as inconsistência de valor, é agrupado todos os valores de itens de cupom, para depois,
    efetuar sua comparação com a capa do cupom e ver se existem divergências nos valores para correção.
*/  
-- ITENS CUPOM (SAT)
SELECT CAST(PC.DATA AS DATE) DATA, 
          PC.CODCAIXA, 
		      PC.COO, 
          SUM(ISNULL(PC.TOTLIQUIDO, 0.00)) - SUM(ISNULL(PC.DESCONTOCUPOM, 0.00)) + SUM(ISNULL(PC.ACRESCIMOCUPOM, 0.00)) CFE,
          0.00 AS PDV
FROM INFO_CUPOM_SAT PS
INNER JOIN ITENS_CUPOM PC ON PC.DATA = PS.DATA AND PC.COO = PS.NUMCUPOMSAT AND PC.SEQUENCIAL = PS.SEQUENCIAL 
   AND PC.CODCAIXA = PS.CODCAIXA AND PC.CODLOJA = PS.CODLOJA
WHERE PS.DATA BETWEEN @DATAINI AND @DATAEND
   AND PS.CODLOJA = @CODLOJA
   AND PC.CANCELADO = 0
 
GROUP BY PC.DATA, PC.CODCAIXA, PC.COO, PC.SEQUENCIAL
 
UNION ALL

-- ITENS CUPOM (NFCE)
SELECT CAST(PC.DATA AS DATE) DATA, 
          PC.CODCAIXA, 
		      PC.COO, 
          SUM(ISNULL(PC.TOTLIQUIDO, 0.00)) - SUM(ISNULL(PC.DESCONTOCUPOM, 0.00)) + SUM(ISNULL(PC.ACRESCIMOCUPOM, 0.00)) CFE,
          0.00 AS PDV
FROM INFO_CUPOM_NFCE PS
INNER JOIN ITENS_CUPOM PC ON PC.DATA = PS.DATA AND PC.COO = PS.NUMNFCE AND PC.SEQUENCIAL = PS.SEQUENCIAL 
   AND PC.CODCAIXA = PS.CODCAIXA AND PC.CODLOJA = PS.CODLOJA
WHERE PS.DATA BETWEEN @DATAINI AND @DATAEND
   AND PS.CODLOJA = @CODLOJA
   AND PC.CANCELADO = 0
 
GROUP BY PC.DATA, PC.CODCAIXA, PC.COO, PC.SEQUENCIAL
 
UNION ALL
    
-- CAPA CUPOM
SELECT CAST(CX.DATA AS DATE) DATA, 
          CX.CODCAIXA,
          CX.COO, 
          0.00 AS CFE,
          SUM(ISNULL(CX.TOTALLIQUIDO, 0.00)) + SUM(ISNULL(CX.ACRESCIMO, 0.00)) PDV
FROM CAPA_CUPOM CX
WHERE CX.DATA BETWEEN @DATAINI AND @DATAEND
   AND CX.CODLOJA = @CODLOJA
   AND CX.TIPOCUPOM = 1
   AND CX.CANCELADO = 0
   GROUP BY CX.DATA, CX.CODCAIXA, CX.COO, CX.SEQUENCIAL
) AS TB

WHERE @GERAREL = 1

GROUP BY TB.DATA, TB.CODCAIXA, TB.COO
    
-- Após coletado todas as informações e feito os cálculos, é calculado a diferençados valores (<> 0)
HAVING SUM(TB.PDV) - SUM(TB.CFE) <> 0
 
UNION ALL

/*
  Nesse trecho é realizado a comparação entre as tabelas para identificação de
  informativos faltantes para correção
*/
  SELECT 'FALTA' AS TIPO,
        TB.DATA,
        TB.CODCAIXA,
		    TB.COO,
		    TB.TABELA,
		    '-' CAN_CAPA,
		    '-' CAN_NFCE_SAT,
		    0.00 PDV,
		    0.00 CFE,
		    0.00 DIFERENCA,
		    'VERIFICAR A TABELA FALTANTE E PROCEDER COM A CORREÇÃO, SE NECESSÁRIO, EXCLUIR E IMPORTAR O CUPOM' ORIENTACAO FROM (

SELECT CAPA_CUPOM.CODCAIXA,
       CAPA_CUPOM.COO,
       CAPA_CUPOM.DATA,
       'CAPA_CUPOM' AS TABELA
FROM CAPA_CUPOM
    
LEFT JOIN ##SATNFCE ON CAPA_CUPOM.CODCAIXA =  ##SATNFCE.CODCAIXA 
    AND CAPA_CUPOM.DATA =  ##SATNFCE.DATA
    AND CAPA_CUPOM.COO =  ##SATNFCE.CUPOM
    AND CAPA_CUPOM.CODLOJA = ##SATNFCE.CODLOJA
    
WHERE CAPA_CUPOM.COO IS NULL
	  AND CAPA_CUPOM.CODLOJA = @CODLOJA
		AND CAPA_CUPOM.DATA BETWEEN @DATAINI AND @DATAEND 

UNION ALL
 
SELECT CAPA_CUPOM.CODCAIXA,
       CAPA_CUPOM.COO,       
       CAPA_CUPOM.DATA,
       'INFO_CUPOM_NFCE OU INFO_CUPOM_SAT' AS TABELA
FROM CAPA_CUPOM
 
LEFT JOIN ##SATNFCE ON CAPA_CUPOM.CODCAIXA =  ##SATNFCE.CODCAIXA 
    AND CAPA_CUPOM.DATA =  ##SATNFCE.DATA
    AND CAPA_CUPOM.COO =  ##SATNFCE.CUPOM
    AND CAPA_CUPOM.CODLOJA = ##SATNFCE.CODLOJA
		 
WHERE CAPA_CUPOM.TIPOCUPOM = 1
    AND ##SATNFCE.CUPOM IS NULL
    AND CAPA_CUPOM.CODLOJA = @CODLOJA
    AND CAPA_CUPOM.DATA BETWEEN @DATAINI AND @DATAEND
) AS TB
 
UNION ALL
    
/*
  Nesse trecho, é verificado em 3 tabelas a exitencia de 
  duplicidades, que podem impactar na diferença de valores nos arquivos Fiscais
*/
SELECT 'DUPLICIDADE' AS TIPO,
        TB.DATA,
        TB.CODCAIXA,
		    TB.COO,
		    TB.TABELA,
		    '-' CAN_CAPA,
		    '-' CAN_NFCE_SAT,
		    0.00 PDV,
		    0.00 CFE,
		    0.00 DIFERENCA,
		    'VALIDAR AS INFORMAÇÕES DUPLICADAS E PROCEDER COM A EXCLUSÃO' 
FROM (

-- CUPOM CAPA
SELECT CAPA_CUPOM.DATA,
       CAPA_CUPOM.CODCAIXA,
       CAPA_CUPOM.COO,
       'CAPA_CUPOM' AS TABELA,
	     0.00 PDV,
	     0.00 CFE,
	     0.00 DIFERENCA FROM CAPA_CUPOM
WHERE CAPA_CUPOM.TIPOCUPOM = 1
  AND CAPA_CUPOM.DATA BETWEEN @DATAINI AND @DATAEND
  AND CAPA_CUPOM.CODLOJA = @CODLOJA
GROUP BY CAPA_CUPOM.CODCAIXA, CAPA_CUPOM.COO, CAPA_CUPOM.DATA, CAPA_CUPOM.CODLOJA
HAVING COUNT(*) >1
 
UNION ALL

-- CUPOM INFO NFCE
SELECT INFO_CUPOM_NFCE.DATA,
       INFO_CUPOM_NFCE.CODCAIXA,
       INFO_CUPOM_NFCE.NUMNFCE COO,
       'INFO_CUPOM_NFCE' AS TABELA,
	     0.00 PDV,
	     0.00 CFE,
	     0.00 DIFERENCA FROM INFO_CUPOM_NFCE
WHERE INFO_CUPOM_NFCE.DATA BETWEEN @DATAINI AND @DATAEND
  AND INFO_CUPOM_NFCE.CODLOJA = @CODLOJA
GROUP BY INFO_CUPOM_NFCE.CODCAIXA, INFO_CUPOM_NFCE.NUMNFCE, INFO_CUPOM_NFCE.DATA, INFO_CUPOM_NFCE.CODLOJA
HAVING COUNT(*) >1
 
UNION ALL

-- CUPOM INFO SAT
SELECT INFO_CUPOM_SAT.DATA,
       INFO_CUPOM_SAT.CODCAIXA,
       INFO_CUPOM_SAT.NUMCUPOMSAT COO,
       'INFO_CUPOM_SAT' AS TABELA,
	      0.00 PDV,
	      0.00 CFE,
	      0.00 DIFERENCA FROM INFO_CUPOM_SAT
WHERE INFO_CUPOM_SAT.DATA BETWEEN @DATAINI AND @DATAEND
  AND INFO_CUPOM_SAT.CODLOJA = @CODLOJA
GROUP BY INFO_CUPOM_SAT.CODCAIXA, INFO_CUPOM_SAT.NUMCUPOMSAT, INFO_CUPOM_SAT.DATA, INFO_CUPOM_SAT.CODLOJA
HAVING COUNT(*) >1
 
)AS TB
 
UNION ALL
    
/*
  Verifica inconsistências de cancelamento nas tabelas. Dei=vido a erros de 
  gravação, não apresentou de forma correta o cancelamento, impactando nos valores.
*/
SELECT 'CANCELAMENTO' AS TIPO,
        TB.DATA,
        TB.CODCAIXA,
		    TB.COO,
		    '-' TABELA,
		    TB.CAN_CAPA,
		    TB.CAN_NFCE_SAT,
		    0.00 PDV,
		    0.00 CFE,
		    0.00 DIFERENCA,
		    'CONSULTAR CUPOM NA SEFAZ, VALIDAR SE ESTÁ CANCELADO E CORRIGIR A TABELA INCORRETA' ORIENTACAO 
  
FROM (

-- Cancelamentos em Cupons NFCE
SELECT CAPA_CUPOM.DATA,
       CAPA_CUPOM.CODCAIXA,
       CAPA_CUPOM.COO,
       CASE WHEN CAPA_CUPOM.CANCELADO = '1' THEN 'SIM'
	     ELSE 'NÃO' END AS CAN_CAPA,
       CASE WHEN INFO_CUPOM_NFCE.CANCELADO = 'S' THEN 'SIM'
	     ELSE 'NÃO' END AS CAN_NFCE_SAT
FROM CAPA_CUPOM
    
LEFT JOIN INFO_CUPOM_NFCE ON INFO_CUPOM_NFCE.DATA = CAPA_CUPOM.DATA
    AND INFO_CUPOM_NFCE.CODCAIXA = CAPA_CUPOM.CODCAIXA
    AND INFO_CUPOM_NFCE.NUMNFCE = CAPA_CUPOM.COO
		AND INFO_CUPOM_NFCE.SEQUENCIAL = CAPA_CUPOM.SEQUENCIAL
		AND INFO_CUPOM_NFCE.CODLOJA = CAPA_CUPOM.CODLOJA
    
WHERE CAPA_CUPOM.DATA BETWEEN @DATAINI AND @DATAEND
    AND CAPA_CUPOM.CODLOJA = @CODLOJA
    AND INFO_CUPOM_NFCE.NUMNFCE IS NOT NULL
    
UNION ALL

-- Cancelamentos em Cupons SAT
SELECT CAPA_CUPOM.DATA,
       CAPA_CUPOM.CODCAIXA,
       CAPA_CUPOM.COO,
       CASE WHEN CAPA_CUPOM.CANCELADO = '1' THEN 'SIM'
	     ELSE 'NÃO' END AS CAN_CAPA,
       CASE WHEN INFO_CUPOM_SAT.CANCELADO = 'S' THEN 'SIM'
	     ELSE 'NÃO' END AS CAN_NFCE_SAT
FROM CAPA_CUPOM
    
LEFT JOIN INFO_CUPOM_SAT ON INFO_CUPOM_SAT.DATA = CAPA_CUPOM.DATA
    AND INFO_CUPOM_SAT.CODCAIXA = CAPA_CUPOM.CODCAIXA
    AND INFO_CUPOM_SAT.NUMCUPOMSAT = CAPA_CUPOM.COO
    AND INFO_CUPOM_SAT.SEQUENCIAL = CAPA_CUPOM.SEQUENCIAL
    AND INFO_CUPOM_SAT.CODLOJA = CAPA_CUPOM.CODLOJA

WHERE CAPA_CUPOM.DATA BETWEEN @DATAINI AND @DATAEND
    AND CAPA_CUPOM.CODLOJA = @CODLOJA
    AND INFO_CUPOM_SAT.NUMCUPOMSAT IS NOT NULL
    
) AS TB

-- Efetua o comparativo para verificar se a diferença entre os cancelamentos
WHERE TB.CAN_CAPA <> TB.CAN_NFCE_SAT
 
) AS TB
 
ORDER BY TIPO, COO, DATA, CODCAIXA
/* --- Fim do bloco anterior --- */

